<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <!--配置文件 -->
  <bean id="baseProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
    <property name="locations">
      <list>
        <value>classpath:jdbc.properties</value>
      </list>
    </property>
  </bean>

  <!-- 配置注解扫描路径 -->
  <context:component-scan base-package="com.alphabeta.platform.*">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>

  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="connectionProperties" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <property name="initialSize" value="5"/>
    <property name="minIdle" value="10"/>
    <property name="maxActive" value="200"/>
    <property name="maxWait" value="60000"/>
    <property name="timeBetweenEvictionRunsMillis" value="3000"/>
    <property name="minEvictableIdleTimeMillis" value="300000"/>
    <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <property name="filters" value="stat"/>
  </bean>

  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
    <property name="mapperLocations" value="classpath*:mapper/**/*Mapper.xml"/>
    <property name="typeAliasesPackage" value="com.alphabeta.*.*.domain.model"/>
    <property name="plugins">
      <array>
        <bean class="com.github.pagehelper.PageInterceptor">
          <property name="properties">
            <value>
              helperDialect=mysql
              offsetAsPageNum=true
              rowBoundsWithCount=true
              reasonable=true
            </value>
          </property>
        </bean>
      </array>
    </property>
  </bean>

  <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.alphabeta.**.*.dao.mapper"/>
  </bean>

  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
    <constructor-arg index="0" ref="sqlSessionFactory"/>
  </bean>
  <!-- 必须加上 -->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

  <aop:aspectj-autoproxy/>

  <aop:config>
    <aop:pointcut id="coreService"
                  expression="execution(* com.alphabeta..*.service.*.*Service*.* (..)) and execution(* com.alphabeta..*.facade.*.*Facade*.* (..))"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="coreService"/>
  </aop:config>

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <!--   <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
      <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
     <tx:method name="get*" propagation="REQUIRED" read-only="true"/>-->
      <tx:method name="*" propagation="REQUIRED"/>
    </tx:attributes>
  </tx:advice>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

</beans>
