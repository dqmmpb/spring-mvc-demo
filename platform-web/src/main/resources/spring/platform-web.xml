<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">

  <import resource="classpath:spring/platform-base.xml"/>
  <import resource="classpath:config/spring-redis.xml"/>

  <!-- 配置文件 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
    <property name="locations">
      <list>
        <value>classpath:spring/config.properties</value>
      </list>
    </property>
  </bean>

  <!-- 配置注解扫描路径 -->
  <context:component-scan base-package="com.alphabeta.platform.web.controller" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
  </context:component-scan>

  <!-- 启动对@AspectJ注解的支持 -->
  <aop:aspectj-autoproxy/>

  <!-- 配置切面 -->
  <bean id="userPrivAspect" class="com.alphabeta.platform.web.aop.UserPrivAspect"/>

  <aop:config>
    <aop:aspect ref="userPrivAspect" order="1">
      <aop:pointcut
        expression="within(com.alphabeta..*.web.controller..*) and @annotation(com.alphabeta.platform.core.annotation.RequiresPermissions)"
        id="checkUserPrivPointcut"/>
      <aop:before method="before" pointcut-ref="checkUserPrivPointcut"/>
    </aop:aspect>
  </aop:config>

  <!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
  <bean class="com.alphabeta.platform.core.spring.SpringContextHolder" lazy-init="false"/>

</beans>
